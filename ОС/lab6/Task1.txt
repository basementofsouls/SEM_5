section .bss
    shared_var resb 1     ; Общая переменная для синхронизации

section .text
global main

main:
    mov byte [shared_var], 0    ; Инициализация общей переменной значением 0

    ; Поток 1
    mov eax, 0          ; Поток 1
    mov ebx, 1          ; Переключение на поток 1

    ; Поток 2
    mov eax, 0          ; Поток 2
    mov ebx, 2          ; Переключение на поток 2

    ; Цикл потоков
    threads_loop:
        cmp ebx, 1
        je thread_1
        jne thread_2

    thread_1:
        ; Поток 1 пытается захватить ресурс (обновить shared_var)
        mov ecx, 1   ; Бит для установки
        lock bts byte [shared_var], cl  ; Попытка установить бит

        jc locked_by_thread_1  ; Если бит был установлен, значит, поток 1 заблокировал ресурс

        ; Если не удалось установить бит, перейти к потоку 2
        jmp thread_2

    thread_2:
        ; Поток 2 пытается захватить ресурс (обновить shared_var)
        mov ecx, 1   ; Бит для установки
        lock bts byte [shared_var], cl  ; Попытка установить бит

        jc locked_by_thread_2  ; Если бит был установлен, значит, поток 2 заблокировал ресурс

        ; Если не удалось установить бит, перейти к потоку 1
        jmp thread_1

    ; Ресурс заблокирован потоком 1
    locked_by_thread_1:
        ; Выполняем код, который требует доступа к общему ресурсу
        ; (критическая секция для потока 1)
        ; Затем освобождаем ресурс
        lock btr byte [shared_var], cl  ; Сброс бита
        jmp threads_loop

    ; Ресурс заблокирован потоком 2
    locked_by_thread_2:
        ; Выполняем код, который требует доступа к общему ресурсу
        ; (критическая секция для потока 2)
        ; Затем освобождаем ресурс
        lock btr byte [shared_var], cl  ; Сброс бита
        jmp threads_loop
